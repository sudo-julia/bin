#!/usr/bin/env bash
set -euo pipefail

# update system on arch, calls aur sep w extra util for aux programs (date-based) at end
# requires informant, pacman-contrib and yay

# if you're using this and you're not me, change this variable to your user
#CURRENT_user=$( who | awk 'NR==1{print $1}' )
user=jam

printPacdiff () {
	if [[ "${PACDIFF_RUN}" -eq 0 ]] && [[ -s /tmp/pacnew.out ]]; then
		printf -- '\n%s %s\n' "Pacnew files:" "$( cat /tmp/pacnew.out )"
		PACDIFF_RUN=1
		return
	else
		:
	fi
	return
}

PACDIFF_RUN=0

if [[ "$( id -u )" -ne 0 ]]; then
	printf -- '%s\n%s\n' "Error! Run as root." "Cancelling."
	exit 1
fi

informant check; INF_UPDATES=$?
if [[ ${INF_UPDATES} -ne 0 ]]; then
	informant list
	printf -- 'Read new bulletins? '; read -r response
	case "$response" in
	    y|Y)
		informant read	;;
	    *)
		printf -- '%s\n' "Skipping read."
	esac
else
    printf -- '%s\n' "No updates to Arch News."
fi

printf -- ':: Proceed with main update? [Y/n] '; read -r response
case "$response" in
    y|Y)
	pacman -Syu
	pacdiff -o > /tmp/pacnew.out
	printf -- ':: Also update AUR packages? [Y/n] '; read -r response
	case "$response" in
	    y|Y)
		sudo -u jam yay -Syua  ;;
	    *)
		printf -- 'Skipping AUR packages.\n'
	esac ;;
    *)
	printf -- 'Cancelling update.\n'
	exit 0
esac
printPacdiff

lastDate=$( tail -n1 /home/jam/bin/.lastDate )
currentDate=$( date "+%y%m%d" )
nextDate=$(( lastDate + 7 ))
# TODO Kill sudo when entering here to negate the extra sudo calls
if [[ "${nextDate}" -lt "${currentDate}" ]]; then
    sudo -u "${user}" zsh /home/jam/bin/runZinit.zsh
    sudo -u "${user}" /usr/bin/tldr --update
	sudo -u "${user}" vim +PluginInstall +qall
	printf -- 'Vim plugins updated.\n'
    /home/jam/bin/getInstalled.bash
	sudo -u "${user}" /home/jam/bin/updatePip.bash
	printf -- 'Npm updated.\n'
	paccache -d
	printf -- ':: Clear pacman cache? [Y/n] '; read -r response
	case "$response" in
		y|Y)
			paccache -rv  ;;
		*)
			printf -- 'Pacman cache cleared.\n'
		esac
    printf -- '%s\n' "${currentDate}" >> /home/jam/bin/.lastDate
    printf -- 'Next full update will run on or after %d.\n' "${nextDate}"
	printPacdiff
# TODO Add updater for cargo and checks for if anything here fails
#      this can be `if [ cmd ]; then \nprintf --'cmd updated\n'`
#### CARGO UPDATER PSEUDOCODE
# if "~/.cargo" exists; then
#     for dir that is not in {'bin', 'git', 'registry'}:
#         (cd "${DIR}" && cargo update)
# else
#     :
#
fi

exit 0
