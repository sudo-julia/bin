#!/usr/bin/env bash
# create or edit a note file

set -e
if [[ "$EDITOR" ]]; then
	editor="$EDITOR"
else
	editor=vim
fi
ft="md"
note_name="$(date -I)"
note_dir="${HOME}/documents/personal/notes"

create_dir() {
	if [[ ! -d "$1" ]]; then
		mkdir -p -- "$1"
	fi
}

create_note() {
	create_dir "$2"
  if [[ "$#" -eq 3 ]]; then
    "$1" -- "${2}/${3}"
    exit 0
  else
    echo "Not Implemented"
    exit 4
  fi
}

list_notes() {
	declare -A notes

	# add all notes to an associate array with the filename as the key and full path as
	# the value
	for f in "$note_dir"/*; do
		notes+=(["$(basename "$f")"]="$f")
	done

	to_edit="$(echo "${!notes[@]}" | tr " " '\n' | fzf +m)"
	# FIX: integrate this with create_note()
	"$editor" -- "${notes[$to_edit]}"
}

print_error() {
	tput setaf 1
	printf -- '[ERR] %s\n' "$*" >&2
	tput sgr0
	exit 1
}

usage() {
	cat <<EOF
Usage: note [<args>]

Arguments are:
    -e, --editor    Chose the editor to use (default \$EDITOR)
    -f, --filetype  Set the filetype of the new note (defaults to markdown)
    -h, --help      Display this help
    -l, --list      List all existing notes and choose one to edit interactively
    -n, --name      Set the name of the note
    --note-dir      Directory to store the note in
EOF
}

# handle arguments
TEMP=$(getopt -o 'e:f:hln:' -l 'filetype:,editor:,help,list,name:,note-dir:' -n 'note' -- "$@")
eval set -- "$TEMP"
unset TEMP

while true; do
	case "$1" in
	'-f' | '--filetype')
		ft="$2"
		shift 2
		continue
		;;
	'-e' | '--editor')
		editor="$2"
		shift 2
		continue
		;;
	'-h' | '--help')
		usage
		exit 0
		;;
	'-l' | '--list')
		list_notes
		exit 0
		;;
	'-n' | '--name')
		note_name="$2"
		shift 2
		continue
		;;
	'--note-dir')
		note_dir="$2"
		shift 2
		continue
		;;
	'--')
		shift
		break
		;;
	*)
		print_error "$2 is not a recognized argument"
		exit 1
		;;
	esac
done

create_note "$editor" "$note_dir" "${note_name}.${ft}"
