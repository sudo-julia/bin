#!/usr/bin/env bash
# create or edit a note file

set -e

create_note() {
	mkdir -p -- "$(dirname "$2")"
	"$1" -- "${2}"
}

select_note() {
	# select a note from existing notes and return it
	declare -A notes

	# add all notes to an associate array with the filename as the key and full path as
	# the value
	for f in "$note_dir"/*; do
		notes+=(["$(basename "$f")"]="$f")
	done

	selected_note="$(echo "${!notes[@]}" | tr " " '\n' | fzf +m --ansi --prompt="$1" --preview="bat $note_dir/{}")"
	if [[ ! "$selected_note" ]]; then
		echo "NO_SELECTION"
	else
		echo "${notes[$selected_note]}"
	fi
}

print_error() {
	tput setaf 1
	printf -- '[ERR] %s\n' "$*" >&2
	tput sgr0
	exit 1
}

usage() {
	cat <<EOF
Usage: note [<options>] [<name of note>]

Options:
    -d, --delete    Delete an existing note
    -e, --edit      Edit an existing note
    -f, --filetype  Set the filetype of the new note. If ommited, use markdown.
    -h, --help      Display this help.
    --editor        Chose the editor to use. If omitted, use \$EDITOR.
    --note-dir      Directory to store the note in.

Args:
    <name of note>  The name of the note. If ommited, today's date is used.
EOF
}

main() {
	# handle arguments
	if [[ "$EDITOR" ]]; then
		editor="$EDITOR"
	else
		editor="vim"
	fi
	ft="md"
	note_dir="${HOME}/documents/personal/notes"

	TEMP=$(getopt -o 'def:h' -l 'delete,edit,editor:,filetype:,help,note-dir:' -n 'note' -- "$@")
	eval set -- "$TEMP"
	unset TEMP

	while true; do
		case "$1" in
		'-d' | '--delete')
			delete=true
			note_name="$(select_note "delete > ")"
			break
			;;
		'-e' | '--edit')
			note_name="$(select_note "edit > ")"
			shift
			continue
			;;
		'--editor')
			editor="$2"
			shift 2
			continue
			;;
		'-f' | '--filetype')
			ft="$2"
			shift 2
			continue
			;;
		'-h' | '--help')
			usage
			exit 0
			;;
		'--note-dir')
			note_dir="$2"
			shift 2
			continue
			;;
		'--')
			shift
			break
			;;
		*)
			print_error "$2 is not a recognized argument."
			exit 1
			;;
		esac
	done

	# set note name to YYYY-MM-DD if no name is provided
	if [[ ! "$note_name" ]]; then
		if [[ "$1" ]]; then
			note_name="$1"
		else
			note_name="$(date -I)"
		fi
		note_name="${note_dir}/${note_name}.${ft}"
	fi

  if [[ "$note_name" == NO_SELECTION ]]; then
    # exit if no note was selected
    echo "No selection, exiting."
    exit 0
  fi

	if [[ "$delete" ]]; then
		rm -- "$note_name" &&
			echo "Deleted '$note_name'"
	else
		create_note "$editor" "$note_name"
	fi
}

main "$@"
