#!/usr/bin/env python3
# select a gitignore for the current directory
from os import getenv
from pathlib import Path
from shutil import Error, copy
import subprocess
import sys
from tempfile import NamedTemporaryFile


def main():
    """select a gitignore"""
    gitignore_dir = Path(f"{getenv('HOME')}/templates/gitignore")
    try:
        if not gitignore_dir.exists():
            print("Cloning gitignore repository...")
            subprocess.run(
                ["git", "clone", "https://github.com/github/gitignore"], check=True
            )
            print(f"gitignores cloned to '{gitignore_dir}'")
    except PermissionError as err:
        raise NotImplementedError from err
    except subprocess.CalledProcessError as err:
        raise NotImplementedError from err

    gitignores = {}
    for file in gitignore_dir.glob("*.gitignore"):
        # pylint: disable=bad-str-strip-call
        gitignores[file.name.replace(".gitignore", "")] = str(file.resolve())

    tmpfile = NamedTemporaryFile(mode="w+")
    chosen = ""
    try:
        # add options to file to pipe into fzf
        with open(tmpfile.name, "w+") as tmp:
            for lang in gitignores:
                tmp.write(lang + "\n")
            tmp.seek(0)
            # decode the output to a string and strip the newline
            chosen = subprocess.check_output(
                f"cat {tmpfile.name} | fzf +m -i", shell=True
            ).decode(sys.stdout.encoding).strip()
    except PermissionError as err:
        raise NotImplementedError from err
    except subprocess.CalledProcessError as err:
        if not chosen:
            return
        raise Error from err
    finally:
        tmpfile.close()

    copy(gitignores[chosen], "./.gitignore")


if __name__ == "__main__":
    main()
